{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedBackOptions/FeedBackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedBackOptions/FeedBackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","props","good","neutral","bad","total","positivePercentage","className","styles","feedBackList","feedBackItem","FeedBackOptions","options","onLeaveFeedback","Object","keys","map","name","btn","type","onClick","Section","title","children","section","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prev","countPositiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,aAAe,iCAAiC,aAAe,mC,kBCAjFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,qICqClBC,MAnCf,SAAoBC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,mCACE,qBAAIC,UAAWC,IAAOC,aAAtB,UACE,qBAAIF,UAAWC,IAAOE,aAAtB,mBACSR,IAD+B,QAGxC,qBAAIK,UAAWC,IAAOE,aAAtB,sBACYP,IAD4B,QAGxC,qBAAII,UAAWC,IAAOE,aAAtB,kBACQN,IADgC,QAGxC,qBAAIG,UAAWC,IAAOE,aAAtB,oBACUL,EAAMH,EAAMC,EAASC,KADS,QAGxC,qBAAIG,UAAWC,IAAOE,aAAtB,gCACsBR,EAAOI,EAAmBJ,EAAMC,EAASC,GAAO,EADtE,MAAwC,c,gBCMjCO,MAxBf,SAAyBV,GACvB,IAAQW,EAA6BX,EAA7BW,QAASC,EAAoBZ,EAApBY,gBACjB,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBACEV,UAAWC,IAAOU,IAElBD,KAAMA,EACNE,KAAK,SACLC,QAAS,kBAAMP,EAAgBI,IALjC,SAOGA,GALIA,S,gBCOAI,MAdf,SAAiBpB,GACf,MAAiCA,EAAzBqB,aAAR,MAAgB,GAAhB,EAAoBC,EAAatB,EAAbsB,SACpB,OACE,0BAAShB,UAAWC,IAAOgB,QAA3B,UACGF,GAAS,oBAAIf,UAAWC,IAAOc,MAAtB,SAA8BA,IACvCC,M,gBCGQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGnB,UAAWC,IAAOmB,aAArB,SAAoCD,KC8D9BE,MA5Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOzB,EAAP,KAAY4B,EAAZ,KAmBMC,EAAqB,WAEzB,OADc/B,EAAOC,EAAUC,GAW3BQ,EAAU,CAAEV,OAAMC,UAASC,OAC3BC,EAAQ4B,IAEd,OACE,qCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBV,QAASA,EAASC,gBAnCjB,SAAAI,GACtB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAI,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHH,GAAW,SAAAG,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHF,GAAO,SAAAE,GAAI,OAAIA,EAAO,KACtB,MAEF,QACE,aAyBD7B,EACC,cAAC,EAAD,CAASiB,MAAM,aAAf,SACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,EACP3B,mBAvBiB,SAACJ,EAAMC,EAASC,GACzC,IAAM+B,EACHjC,EAAO+B,IAA0C,IAEpD,OAAOG,KAAKC,MAAMF,QAuBd,cAAC,EAAD,CAAcT,QAAQ,0BCvD9BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.50e2eebb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBackList\":\"Statistics_feedBackList__2K_h6\",\"feedBackItem\":\"Statistics_feedBackItem__2LkRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__2f5_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <>\n      <ul className={styles.feedBackList}>\n        <li className={styles.feedBackItem} key=\"id-1\">\n          Good: {good}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-2\">\n          Neutral: {neutral}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-3\">\n          Bad: {bad}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-4\">\n          Total: {total(good, neutral, bad)}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-5\">\n          Positive feedback: {good ? positivePercentage(good, neutral, bad) : 0}\n          %\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FeedBackOptions.module.css';\n\nfunction FeedBackOptions(props) {\n  const { options, onLeaveFeedback } = props;\n  return (\n    <>\n      {Object.keys(options).map(name => (\n        <button\n          className={styles.btn}\n          key={name}\n          name={name}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(name)}\n        >\n          {name}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedBackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedBackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section(props) {\n  const { title = '', children } = props;\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={styles.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedBackOptions from './components/FeedBackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = name => {\n    switch (name) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const positivePercentage = (good, neutral, bad) => {\n    const countPositiveFeedbackPercentage =\n      (good / countTotalFeedback(good, neutral, bad)) * 100;\n\n    return Math.round(countPositiveFeedbackPercentage);\n  };\n\n  const options = { good, neutral, bad };\n  const total = countTotalFeedback();\n\n  return (\n    <>\n      <Section title=\"Please leave Feedback\">\n        <FeedBackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n\n      {total ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}