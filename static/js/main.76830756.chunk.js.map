{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedBackOptions/FeedBackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedBackOptions/FeedBackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","props","good","neutral","bad","total","positivePercentage","className","styles","feedBackList","feedBackItem","FeedBackOptions","options","onLeaveFeedback","Object","keys","map","name","btn","type","onClick","Section","title","children","section","Notification","message","notification","App","state","e","setState","prevState","target","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","bind","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,aAAe,iCAAiC,aAAe,mC,kBCAjFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,qKCqClBC,MAnCf,SAAoBC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,mCACE,qBAAIC,UAAWC,IAAOC,aAAtB,UACE,qBAAIF,UAAWC,IAAOE,aAAtB,mBACSR,IAD+B,QAGxC,qBAAIK,UAAWC,IAAOE,aAAtB,sBACYP,IAD4B,QAGxC,qBAAII,UAAWC,IAAOE,aAAtB,kBACQN,IADgC,QAGxC,qBAAIG,UAAWC,IAAOE,aAAtB,oBACUL,EAAMH,EAAMC,EAASC,KADS,QAGxC,qBAAIG,UAAWC,IAAOE,aAAtB,gCACsBR,EAAOI,EAAmBJ,EAAMC,EAASC,GAAO,EADtE,MAAwC,c,gBCMjCO,MAxBf,SAAyBV,GACvB,IAAQW,EAA6BX,EAA7BW,QAASC,EAAoBZ,EAApBY,gBACjB,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBACEV,UAAWC,IAAOU,IAElBD,KAAMA,EACNE,KAAK,SACLC,QAASP,EALX,SAOGI,GALIA,S,gBCOAI,MAdf,SAAiBpB,GACf,MAAiCA,EAAzBqB,aAAR,MAAgB,GAAhB,EAAoBC,EAAatB,EAAbsB,SACpB,OACE,0BAAShB,UAAWC,IAAOgB,QAA3B,UACGF,GAAS,oBAAIf,UAAWC,IAAOc,MAAtB,SAA8BA,IACvCC,M,iBCGQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGnB,UAAWC,IAAOmB,aAArB,SAAoCD,KC0D9BE,E,4MAvDbC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,gBAAkB,SAAAiB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOhB,KAAOe,EAAUF,EAAEG,OAAOhB,MAAQ,O,wDAGhD,SAAmBf,EAAMC,EAASC,GAEhC,OADcF,EAAOC,EAAUC,I,6CAGjC,SAAgCF,EAAMC,EAASC,GAC7C,IAAME,EACHJ,EAAOgC,KAAKC,mBAAmBjC,EAAMC,EAASC,GAAQ,IAEzD,OAAOgC,KAAKC,MAAM/B,K,oBAGpB,WACE,MAA+B4B,KAAKL,MAA5B3B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBQ,EAAUsB,KAAKL,MACfxB,EAAQ6B,KAAKC,mBACb7B,EAAqB4B,KAAKI,gCAAgCC,KAAKL,MAErE,OACE,qCACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASA,EACTC,gBAAiBqB,KAAKrB,oBAIzBR,EAAMH,EAAMC,EAASC,GACpB,cAAC,EAAD,CAASkB,MAAM,aAAf,SACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC,EAAD,CAAcoB,QAAQ,6B,GAjDdc,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.76830756.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBackList\":\"Statistics_feedBackList__2K_h6\",\"feedBackItem\":\"Statistics_feedBackItem__2LkRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__2f5_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <>\n      <ul className={styles.feedBackList}>\n        <li className={styles.feedBackItem} key=\"id-1\">\n          Good: {good}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-2\">\n          Neutral: {neutral}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-3\">\n          Bad: {bad}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-4\">\n          Total: {total(good, neutral, bad)}\n        </li>\n        <li className={styles.feedBackItem} key=\"id-5\">\n          Positive feedback: {good ? positivePercentage(good, neutral, bad) : 0}\n          %\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FeedBackOptions.module.css';\n\nfunction FeedBackOptions(props) {\n  const { options, onLeaveFeedback } = props;\n  return (\n    <>\n      {Object.keys(options).map(name => (\n        <button\n          className={styles.btn}\n          key={name}\n          name={name}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {name}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedBackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedBackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section(props) {\n  const { title = '', children } = props;\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={styles.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedBackOptions from './components/FeedBackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n  countTotalFeedback(good, neutral, bad) {\n    const total = good + neutral + bad;\n    return total;\n  }\n  countPositiveFeedbackPercentage(good, neutral, bad) {\n    const positivePercentage =\n      (good / this.countTotalFeedback(good, neutral, bad)) * 100;\n\n    return Math.round(positivePercentage);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = this.state;\n    const total = this.countTotalFeedback;\n    const positivePercentage = this.countPositiveFeedbackPercentage.bind(this);\n\n    return (\n      <>\n        <Section title=\"Please leave Feedback\">\n          <FeedBackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        {total(good, neutral, bad) ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}